.\" Automatically generated by Pod::Man 4.07 (Pod::Simple 3.32)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\" ========================================================================
.\"
.IX Title "SOUP 1"
.TH SOUP 1 "2017-12-24" "perl v5.24.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBsoup.pl\fR [\fI\s-1OPTIONS\s0\fR] < \fIinput.txt\fR > \fIoutput.html\fR
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Generate a chaotic writing effect in \s-1HTML\s0 by randomly transforming each letter.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-\-min\-scale\fR [\fIratio\fR=\fI0.25\fR]" 4
.IX Item "--min-scale [ratio=0.25]"
Specify the minimum scale ratio.
Defaults to 0.25.
.IP "\fB\-\-max\-scale\fR [\fIratio\fR=\fI1.95\fR]" 4
.IX Item "--max-scale [ratio=1.95]"
Specify the maximum scale ratio.
Defaults to 1.95.
.IP "\fB\-\-tilt\fR [\fIangle\fR=\fI45\fR]" 4
.IX Item "--tilt [angle=45]"
Maximum offset to rotate each letter by.
Defaults to 45 degrees.
.IP "\fB\-\-extra\-css\fR [\fIstring\fR]" 4
.IX Item "--extra-css [string]"
Additional \s-1CSS\s0 properties to assign each transformed letter.
Defaults to the empty string.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
Generate evenly-sized text with wildly varying rotation:
.PP
.Vb 1
\&        soup.pl \-\-min\-scale=1 \-\-max\-scale=1 \-\-tilt=360 < input.txt
.Ve
.PP
Generate text with randomly enlarged characters (without shrinking or tilting):
.PP
.Vb 1
\&        soup.pl \-\-min\-scale=1 \-\-max\-scale=3 \-\-tilt=0 < input.txt
.Ve
.PP
Generate yellow-coloured text in Comic Sans:
.PP
.Vb 1
\&        soup.pl \-\-extra\-css="color: #ff0; font\-family: Comic Sans MS" < input.txt
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
Copyright Â© 2017, Alhadis <\fIgardnerjohng@gmail.com\fR>.
Written for a friend.
